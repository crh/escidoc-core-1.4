<chapter id="AggregationDefinition">
	<title>Resource AggregationDefinition</title>
	<para>
		The statistic data gets aggregated in a nightly process depending 
		on aggregation-definitions that are held by the system. Depending 
		on criteria defined within the aggregation-definition, the process 
		extracts the statistic-record-xmls out of the statistics-table, 
		iterates through them and aggregates them into aggregation-tables. 
		Each aggregation-definition fills one or more aggregation-tables. 
		Each aggregation-table is only filled by one aggregation-definition.		
	</para>
	<para>
		An aggregation-definition is defined by an xml-record, 
		according to the aggregation-definition-schema.		
	</para>
	<para>
		The aggregation-definition-schema holds the following main elements:
		<para>
		-statistic-data and subelement statistic-table:
		<section>
			Defines, what data to extract out of the statistics-table for this aggregation.
			Each aggregation-definition belongs to a specific statistic-scope. 
			The aggregation-definition can only extract those records out 
			of the statistics-table that belong to this scope.		
			Additional criteria to only select a subset of the 
			statistic-table-records that belong to the scope are 
			described by an xpath-expression that runs on the statistic-record-xml.
			If all statistic-table-records shall get returned, 
			just put an empty xpath-element below the 
			statistic-table-element in your aggregation-definition-xml.	
			For the first release, element statistics-table will be 
			the only allowed element below the element statistics-data. 
			For later releases we could think about supporting webservice-calls 
			that return xml or using logfiles as a base for the aggregation.		
			Note: Each owner of the scope is responsible for the design 
			of the statistic-record-xml so the xpath-query only returns 
			the records that are really needed by the aggregation-definition!	
		</section>
		</para>
		<para>
		-aggregation-table:
		<section>
		Defines the name, fields, field-types and indexes of the 
		database-table where the aggregated data gets written to.
		Each field of the database-table needs a description 
		what data from the statistic-records to write into the field.
		Therefore you can define 4 different field-types:
			<para>
			-info-field: field that holds a value (string, date or numeric) 
						that comes from a parameter-value of one statistic-record-xml.
			</para>
			<para>
			-time-reduction-field: field that holds part of a date (can be year,month,day,weekday). 
							If a xpath-element is defined, use this parameter from the 
							statistic-record-xml. Child of this parameter must be &lt;datevalue&gt;. 
							If no xpath-element is defined, use the timestamp when the 
							statistics-record was written. Time-reduction-fields 
							are always numeric database-fields.
			</para>
			<para>
			-count-cumulation-field: holds the count of aggregation-table-records with same 
							values in all other fields of type info-field and 
							time-reduction-field. Count-cumulation-fields 
							are always numeric database-fields.
			</para>
			<para>
			-difference-cumulation-field: holds the count of statistic-record-xmls with different 
							values in given statistics-parameter and same values 
							in all other fields of type info-field and time-reduction-field. 
							Eg used for a aggregation-table-field that holds 
							the number of sessions. Difference-cumulation-fields 
							are always numeric database-fields.
			</para>
		</section>
		</para>
		For more details, please see the aggregation-definition schema description.
	</para>
	<para>
		The Statistic Manager Component provides an interface to manage aggregation-definitions.		
	</para>
	<para>
		Aggregation-definitions are creatable, retrievable and deletable but not modifiable! 
		Parameter of the create-interface-call is an xml-record, according to 
		the aggregation-Schema. The user who calls the interface has to 
		have permissions to manage content of the scope defined in the 
		aggregation-definition-xml (see chapter security concept).		
	</para>
	<para>
		The AggregationDefinitionHandler also provides a method to retrieve a 
		filtered list of Aggregation-Definitions. The list only contains these Aggregation-Definitions 
		the user is allowed to see (see chapter ‘security concept’).		
	</para>
</chapter>
