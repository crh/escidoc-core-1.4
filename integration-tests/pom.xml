<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.escidoc.core</groupId>
  <artifactId>integration-tests</artifactId>
  <packaging>pom</packaging>
  <name>eSciDoc Core - Integration Tests</name>
  <version>1.4-SNAPSHOT</version>
  <description>Integration Tests of eSciDoc Core</description>

  <parent>
    <artifactId>eSciDocCore</artifactId>
    <groupId>org.escidoc.core</groupId>
    <version>1.4-SNAPSHOT</version>
  </parent>

  <build>
    <outputDirectory>target/test-classes</outputDirectory>

    <filters>
      <filter>${basedir}/src/test/filters/database-filter-values.properties</filter>
    </filters>

    <plugins>
      <!-- EXTRA -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                def server = settings.servers.find{ it.id.equals('escidoc-core-db-admin') };
                project.properties['escidoc.postgres.database.admin.user'] = server.username
                project.properties['escidoc.postgres.database.admin.password'] = server.password
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
        <artifactId>maven-java-formatter-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- [01] -->
      <!-- Copy SQL files to local project and filter them. This could be done with sql-maven-plugin version 1.4 but this 
        version has issues. For some reason, the resources plugin does not follow the defined plugin-order sometimes and to ensure 
        build stability, the resources plugin's pre-integration-test actions have been shifted to the prepare-package phase. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-drop-script [oracle]</id>
            <phase>-pre-clean</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <!-- this plugin does not support skipping -->
              <!-- <skip>${database.oracle.skip}</skip> -->
              <outputDirectory>${project.build.directory}/sql-resources/oracle</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/../common/src/main/resources/sql/oracle</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-filtered-test-config</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/test/filtered-resources</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>escidoc.properties</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-filtered-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/test/filtered-resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                    <exclude>escidoc.properties</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-foxml-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/foxml-resources</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.testSourceDirectory}/../resources/examples/common/foxml1.1</directory>
                  <filtering>true</filtering>
                </resource>
                <resource>
                  <directory>${project.build.testSourceDirectory}/../resources/examples/pubman/foxml1.1</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- [02] -->
      <!-- [03] -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <skip>${skipITs}</skip>
        </configuration>
        <executions>
          <execution>
            <id>install-escidoc-core</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-Dskip.validation=true</argument>
                <argument>-jar</argument>
                <argument>${project.basedir}/../installer/target/installer-${project.version}.jar
								</argument>
                <argument>${project.build.directory}/${escidoc.installer.config}
								</argument>
              </arguments>
              <outputFile>${project.build.directory}/escidoc-installer.log
							</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>ingest-fedora-resources</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <mainClass>org.fcrepo.client.utility.ingest.Ingest</mainClass>
              <workingDirectory>${project.build.directory}</workingDirectory>
              <arguments>
                <argument>-Xms64m</argument>
                <argument>-Xmx96m</argument>

                <argument>-classpath</argument>
                <argument>${project.build.directory}${file.separator}escidoc${file.separator}fedora${file.separator}client${file.separator}bin${path.separator}${project.build.directory}${file.separator}escidoc${file.separator}fedora${file.separator}client${file.separator}fcrepo-client-admin-${fcrepo.version}.jar</argument>
                <argument>-Djava.endorsed.dirs=${project.build.directory}${file.separator}escidoc${file.separator}fedora${file.separator}client${file.separator}lib</argument>
                <argument>-Djavax.net.ssl.trustStore=${project.build.directory}${file.separator}escidoc${file.separator}fedora${file.separator}client${file.separator}truststore</argument>
                <argument>-Djavax.net.ssl.trustStorePassword=tomcat</argument>
                <argument>-Djavax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl</argument>
                <argument>-Djavax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl</argument>
                <argument>-Dfedora.home=${project.build.directory}${file.separator}escidoc${file.separator}fedora</argument>

                <argument>org.fcrepo.client.utility.ingest.Ingest</argument>
                <argument>d</argument>
                <argument>foxml-resources</argument>
                <argument>info:fedora/fedora-system:FOXML-1.1</argument>
                <argument>${escidoc.server.host}:${escidoc.server.port}</argument>
                <argument>${fedora.admin.user}</argument>
                <argument>${fedora.admin.password}</argument>
                <argument>http</argument>
              </arguments>
              <outputFile>${project.build.directory}${file.separator}fcrepo-ingest.log</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- [04] -->
      <plugin>
        <groupId>com.google.code.maven-config-processor-plugin</groupId>
        <artifactId>maven-config-processor-plugin</artifactId>
        <configuration>
          <transformations>
            <transformation>
              <type>properties</type>
              <input>${project.build.directory}/escidoc/jboss/server/default/conf/escidoc-core.custom.properties</input>
              <config>src/test/resources/config-plugin/pid-settings.xml</config>
            </transformation>
            <transformation>
              <type>properties</type>
              <input>${project.build.directory}/escidoc/jboss/server/default/conf/escidoc-core.custom.properties</input>
              <config>src/test/resources/config-plugin/ontologie-settings.xml</config>
            </transformation>
            <transformation>
              <type>properties</type>
              <input>${project.build.directory}/escidoc/jboss/server/default/conf/search/config/index/content_model_admin/index.object-types.properties</input>
              <config>src/test/resources/config-plugin/content_model_admin.xml</config>
            </transformation>
            <transformation>
              <type>properties</type>
              <input>${project.build.directory}/escidoc/jboss/server/default/conf/search/config/index/content_relation_admin/index.object-types.properties</input>
              <config>src/test/resources/config-plugin/content_relation_admin.xml</config>
            </transformation>
            <transformation>
              <type>properties</type>
              <input>${project.build.directory}/escidoc/jboss/server/default/conf/search/config/index/context_admin/index.object-types.properties</input>
              <config>src/test/resources/config-plugin/context_admin.xml</config>
            </transformation>
            <transformation>
              <type>properties</type>
              <input>${project.build.directory}/escidoc/jboss/server/default/conf/search/config/index/item_container_admin/index.object-types.properties</input>
              <config>src/test/resources/config-plugin/item_container_admin.xml</config>
            </transformation>
            <transformation>
              <type>properties</type>
              <input>${project.build.directory}/escidoc/jboss/server/default/conf/search/config/index/ou_admin/index.object-types.properties</input>
              <config>src/test/resources/config-plugin/ou_admin.xml</config>
            </transformation>
          </transformations>
        </configuration>
        <executions>
          <execution>
            <id>overwrite-configuration</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <skip>${skipITs}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- [05] -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <dependencies>
          <!-- jdbc driver -->
          <dependency>
            <groupId>${escidoc.jdbc.groupId}</groupId>
            <artifactId>${escidoc.jdbc.artifactId}</artifactId>
            <version>${escidoc.jdbc.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <!-- CLEAN [escidoc-db] -->
          <execution>
            <id>drop-escidoc-db [postgres]</id>
            <phase>clean</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.postgres.skip}</skip>
              <driver>org.postgresql.Driver</driver>
              <!-- need another database to drop the targeted one -->
              <url>jdbc:postgresql://${escidoc.database.host}:${escidoc.database.port}/postgres</url>
              <settingsKey>escidoc-core-db-admin</settingsKey>
              <autocommit>true</autocommit>
              <sqlCommand>DROP DATABASE IF EXISTS "${escidoc.database.name}"</sqlCommand>
              <onError>continue</onError>
            </configuration>
          </execution>
          <execution>
            <id>drop-escidoc-db [oracle]</id>
            <phase>-pre-clean</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.oracle.skip}</skip>
              <driver>oracle.jdbc.driver.OracleDriver</driver>
              <url>jdbc:oracle:thin:@${escidoc.oracle.host}:${escidoc.oracle.port}:${escidoc.oracle.database}</url>
              <username>${escidoc.oracle.database.admin.user}</username>
              <password>${escidoc.oracle.database.admin.password}</password>
              <autocommit>true</autocommit>
              <delimiter>/</delimiter>
              <delimiterType>row</delimiterType>
              <keepFormat>true</keepFormat>
              <srcFiles>
                <srcFile>${project.build.directory}/sql-resources/oracle/drop-db.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>
          <execution>
            <id>drop-escidoc-role [postgres]</id>
            <phase>clean</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.postgres.skip}</skip>
              <driver>org.postgresql.Driver</driver>
              <!-- need another database to drop the targeted one -->
              <url>jdbc:postgresql://${escidoc.database.host}:${escidoc.database.port}/postgres</url>
              <settingsKey>escidoc-core-db-admin</settingsKey>
              <autocommit>true</autocommit>
              <sqlCommand>DROP ROLE IF EXISTS "${escidoc.database.user}"</sqlCommand>
              <onError>continue</onError>
            </configuration>
          </execution>
          <!-- CLEAN [fedora/triplestore-db] -->
          <execution>
            <id>drop-fedora-db [postgres]</id>
            <phase>clean</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.postgres.skip}</skip>
              <driver>org.postgresql.Driver</driver>
              <!-- need another database to drop the targeted one -->
              <url>jdbc:postgresql://${escidoc.database.host}:${escidoc.database.port}/postgres</url>
              <settingsKey>escidoc-core-db-admin</settingsKey>
              <autocommit>true</autocommit>
              <sqlCommand>DROP DATABASE IF EXISTS "${fedora.database.name}"</sqlCommand>
              <onError>continue</onError>
            </configuration>
          </execution>
          <execution>
            <id>drop-triplestore-db [postgres]</id>
            <phase>clean</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.postgres.skip}</skip>
              <driver>org.postgresql.Driver</driver>
              <!-- need another database to drop the targeted one -->
              <url>jdbc:postgresql://${escidoc.database.host}:${escidoc.database.port}/postgres</url>
              <settingsKey>escidoc-core-db-admin</settingsKey>
              <autocommit>true</autocommit>
              <sqlCommand>DROP DATABASE IF EXISTS
                "${triplestore.database.name}"</sqlCommand>
              <onError>continue</onError>
            </configuration>
          </execution>
          <execution>
            <id>drop-fedora-role [postgres]</id>
            <phase>clean</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.postgres.skip}</skip>
              <driver>org.postgresql.Driver</driver>
              <!-- need another database to drop the targeted one -->
              <url>jdbc:postgresql://${escidoc.database.host}:${escidoc.database.port}/postgres</url>
              <settingsKey>escidoc-core-db-admin</settingsKey>
              <autocommit>true</autocommit>
              <sqlCommand>DROP ROLE IF EXISTS "${fedora.database.user}"</sqlCommand>
              <onError>continue</onError>
            </configuration>
          </execution>
          <execution>
            <id>drop-fedora-db [oracle]</id>
            <phase>clean</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.oracle.skip}</skip>
              <driver>oracle.jdbc.driver.OracleDriver</driver>
              <url>jdbc:oracle:thin:@${escidoc.oracle.host}:${escidoc.oracle.port}:${fedora.oracle.database}</url>
              <username>${fedora.oracle.database.admin.user}</username>
              <password>${fedora.oracle.database.admin.password}</password>
              <autocommit>true</autocommit>
              <delimiter>/</delimiter>
              <delimiterType>row</delimiterType>
              <keepFormat>true</keepFormat>
              <srcFiles>
                <srcFile>${basedir}/../common/src/main/resources/sql/oracle/drop-fedora-db.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>
          <!-- PRE-INTEGRATION-TEST -->
          <execution>
            <id>insert-test-user [postgres]</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.postgres.skip}</skip>
              <driver>org.postgresql.Driver</driver>
              <url>jdbc:postgresql://${escidoc.database.host}:${escidoc.database.port}/${escidoc.database.name}</url>
              <settingsKey>escidoc-core-db-admin</settingsKey>
              <autocommit>true</autocommit>
              <srcFiles>
                <!-- the initialize phase allows no filtering. Furthermore is creating database part of the test phase. That's 
                  why here should only be these tables are generated where hibernate depends on. -->
                <srcFile>${project.build.directory}/sql-resources/postgres/test/test.aa.init.roles.sql</srcFile>
                <srcFile>${project.build.directory}/sql-resources/postgres/test/test.aa.init.users.sql</srcFile>
                <srcFile>${project.build.directory}/sql-resources/postgres/test/test.aa.init.groups.sql</srcFile>
                <srcFile>${project.build.directory}/sql-resources/postgres/test/test.sm.create.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>
          <execution>
            <id>insert-test-user [oracle]</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <skip>${escidoc.oracle.skip}</skip>
              <driver>oracle.jdbc.driver.OracleDriver</driver>
              <url>jdbc:oracle:thin:@${escidoc.oracle.host}:${escidoc.oracle.port}:${escidoc.oracle.database}</url>
              <username>${escidoc.database.user}</username>
              <password>${escidoc.database.password}</password>
              <autocommit>true</autocommit>
              <delimiter>;</delimiter>
              <delimiterType>normal</delimiterType>
              <keepFormat>false</keepFormat>
              <srcFiles>
                <srcFile>${basedir}/target/sql-resources/oracle/test/test.aa.init.roles.sql</srcFile>
                <srcFile>${basedir}/target/sql-resources/oracle/test/test.aa.init.users.sql</srcFile>
                <srcFile>${basedir}/target/sql-resources/oracle/test/test.aa.init.groups.sql</srcFile>
                <srcFile>${basedir}/target/sql-resources/oracle/test/test.sm.create.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- [06] -->
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <wait>false</wait>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>${skipITs}</skip>
          <wait>${cargo.wait}</wait>
          <container>
            <containerId>jboss42x</containerId>
            <home>${project.build.directory}/escidoc/jboss</home>
            <timeout>600000</timeout>
          </container>

          <configuration>
            <type>standalone</type>
            <properties>
              <cargo.hostname>localhost</cargo.hostname>
              <cargo.protocol>http</cargo.protocol>
              <cargo.servlet.port>${escidoc.server.port}</cargo.servlet.port>
              <cargo.rmi.port>1099</cargo.rmi.port>
              <cargo.logging>medium</cargo.logging>
              <cargo.jvmargs>${cargo.jvmargs} ${cargo.jvmdebug} ${cargo.ucldebug}</cargo.jvmargs>
            </properties>
            <deployables>
              <deployable>
                <groupId>org.escidoc</groupId>
                <artifactId>testdata</artifactId>
                <type>war</type>
                <properties>
                  <context>testdata</context>
                </properties>
              </deployable>
            </deployables>
          </configuration>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>compile-it-sources</id>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <source>${java.source.version}</source>
          <target>${java.target.version}</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <verbose>true</verbose>
          <fork>true</fork>
          <meminitial>128m</meminitial>
          <maxmem>512m</maxmem>
          <debug>true</debug>
          <optimize>false</optimize>
        </configuration>
      </plugin>

      <!-- skip compiling integration test source because axis is to generate first (but compiling test-sources comes first 
        in standard lifecycle) -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-juni47</artifactId>
            <version>2.10</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- [07] -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <systemproperties>
            <property>
              <!-- Specific log4j config for tests -->
              <name>log4j.configuration</name>
              <value>test-log4j.xml</value>
            </property>
          </systemproperties>
          <redirectTestOutputToFile>${project.build.directory}/test-output.log</redirectTestOutputToFile>
          <forkMode>always</forkMode>
          <argLine>-Xmx1024m -XX:MaxPermSize=320m</argLine>
          <failIfNoTests>true</failIfNoTests>
        </configuration>
      </plugin>

      <!-- [08] -->
      <plugin>
        <groupId>org.apache.jmeter</groupId>
        <artifactId>maven-jmeter-plugin</artifactId>
        <version>1.0-GA</version>
        <executions>
          <execution>
            <id>jmeter-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>jmeter</goal>
            </goals>
            <configuration>
              <reportDir>${project.build.directory}/jmeter-reports</reportDir>
              <jmeterUserProperties>
                <hostname>localhost</hostname>
                <port>${escidoc.server.port}</port>
              </jmeterUserProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.escidoc.core</groupId>
      <artifactId>aspects</artifactId>
    </dependency>
    <dependency>
      <groupId>org.escidoc</groupId>
      <artifactId>testdata</artifactId>
      <version>0.0.2-alpha3</version>
      <type>war</type>
    </dependency>
   <dependency>
      <groupId>org.escidoc.core</groupId>
      <artifactId>common</artifactId>
    </dependency>
    <!-- Spring Framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- TODO: Remove as soon as all external libraries (Fedora) migration to new http client. -->
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.fcrepo</groupId>
      <artifactId>fcrepo-client-admin</artifactId>
      <version>${fcrepo.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.activemq</groupId>
          <artifactId>activemq-all</artifactId>
        </exclusion>
        <exclusion>
          <groupId>owlapi</groupId>
          <artifactId>owlapi</artifactId>
        </exclusion>
        <exclusion>
          <groupId>gnu.getopt</groupId>
          <artifactId>java-getopt</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.fcrepo</groupId>
          <artifactId>trippi-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.fcrepo</groupId>
          <artifactId>mulgara-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.fcrepo</groupId>
          <artifactId>openrdf-sesame-onejar</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.fcrepo</groupId>
          <artifactId>jai_codec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.fcrepo</groupId>
          <artifactId>jai_core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.fcrepo</groupId>
          <artifactId>trippi-mulgara</artifactId>
        </exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
				<exclusion>
					<groupId>batik</groupId>
					<artifactId>batik-swing</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.fcrepo</groupId>
      <artifactId>fcrepo-common</artifactId>
      <version>${fcrepo.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.lucene</groupId>
          <artifactId>lucene-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>log4j-over-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.fcrepo</groupId>
          <artifactId>mulgara-core</artifactId>
        </exclusion>
              <exclusion>
                <groupId>org.fcrepo</groupId>
                <artifactId>fcrepo-generate</artifactId>
              </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>fedora-commons</groupId>
      <artifactId>fedora-rest-client</artifactId>
      <version>0.1.3.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>fm.void.jetm</groupId>
      <artifactId>jetm</artifactId>
      <version>1.2.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>fm.void.jetm</groupId>
      <artifactId>jetm-optional</artifactId>
      <version>1.2.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
    </dependency>
    <!-- <dependency> <groupId>javax.mail</groupId> <artifactId>mail</artifactId> <version>1.4</version> <type>jar</type> 
      <scope>test</scope> </dependency> -->

    <!-- for SB -->
    <dependency>
      <groupId>pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>0.7.3</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.fiz.edb</groupId>
      <artifactId>xml2pdf</artifactId>
      <version>1.0</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org</groupId>
      <artifactId>trippi</artifactId>
      <version>1.4.1</version>
      <classifier>core</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.ws.security</groupId>
      <artifactId>wss4j</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-discovery</groupId>
      <artifactId>commons-discovery</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.z3950.zing</groupId>
      <artifactId>cql-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-ext</artifactId>
      <version>1.7</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
      </dependency>
      <dependency>
        <groupId>org.escidoc.core</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
      </dependency>
  </dependencies>
</project>
