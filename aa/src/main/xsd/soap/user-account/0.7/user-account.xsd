<?xml version="1.0" encoding="UTF-8"?>
<!--
    Changes applied to this schema since Version 0.6:
    - Version changed to 0.7.
    - removed properties email, name, person and org-units.
    - added attributes-resource
    
	Changes applied to this schema since Version 0.5:
	- Version changed to 0.6.
	
	- Added resource "preferences" (just REST).
	
    Changes applied to this schema since Version 0.4:
    - Version changed to 0.5.
    
    - Replaced usage of affiliations element by organizational-units from namespace 
      http://escidoc.de/core/01/properties/ (this removed marking an 
      organizational-unit as the primary one. See 
      http://www.escidoc-project.de/issueManagement/show_bug.cgi?id=443)
      
    
    Changes applied to this schema since Version 0.3:
    - Version changed to 0.4.
    
    - Changed namespace (both xmlns and targetNamespace) to http://www.escidoc.de/schemas/usersaccount/0.4.
    
    - Changed namespaces of referenced schema  http://www.escidoc.de/schemas/commontypes/0.4
    
    - Added namespace of referenced schemas
      http://escidoc.de/core/01/properties/
      http://escidoc.de/core/01/structural-relations/
      
    - Replaced rest attributes (xlink:type, xlink:title, xlink:href, xml:base) in  element user-account
      with references to appropriate attribute groups in common-types.xsd.
    
    - Changed element /user-account/properties/organizational-units to 
      affiliations in namespace http://escidoc.de/core/01/properties/
      
    - Changed namespaces of contents of the element /user-account/properties 
      to http://escidoc.de/core/01/properties/ for following elements:
      * creation-date,
      * email,
      * name,
      * login-name,
      * active
      
      to http://escidoc.de/core/01/structural-relations/ for following elements:
      * created-by
      * modified-by
      * person
      
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:prop="http://escidoc.de/core/01/properties/"
    xmlns:srel="http://escidoc.de/core/01/structural-relations/"
    xmlns:common-types="http://www.escidoc.de/schemas/commontypes/0.4"
    xmlns:user-account="http://www.escidoc.de/schemas/useraccount/0.7"
    targetNamespace="http://www.escidoc.de/schemas/useraccount/0.7"
    elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace"
        schemaLocation="http://www.escidoc.org/schemas/rest/common/0.3/xml.xsd" />
    <xs:import namespace="http://escidoc.de/core/01/properties/" 
        schemaLocation="http://www.escidoc.org/schemas/soap/common/0.4/properties.xsd"/>
    <xs:import namespace="http://escidoc.de/core/01/structural-relations/" 
        schemaLocation="http://www.escidoc.org/schemas/soap/common/0.4/structural-relations.xsd"/>
    <xs:import namespace="http://www.escidoc.de/schemas/commontypes/0.4"
        schemaLocation="http://www.escidoc.org/schemas/rest/common/0.4/common-types.xsd" />
    <xs:element name="user-account">
        <xs:annotation>
            <xs:documentation>
                <para> Following you will find information which elements and
                    attributes are "required", "optional", "not-allowed" or
                    will be "discarded" in the input XML-stream when creating or
                    updating such an object. </para>
                <para> In "create" the rule for creating a new object is defined.
                    </para>
                <para> In "update" the rule for updating an object is defined.
                    </para>
                <para> Possible values are: required | optional | not-allowed |
                    discarded </para>
                <para> required: this element or attribute has to be delivered
                    </para>
                <para> optional: this element or attribute can be delivered and
                    will be kept </para>
                <para> not-allowed: this element or attribute is not allowed in
                    delivery and will cause an exception </para>
                <para> discarded: this element or attribute can be delivered but
                    will not be used </para>
            </xs:documentation>
            <xs:documentation>
                <create>required</create>
                <update>required</update>
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="properties">
                    <xs:annotation>
                        <xs:documentation>
                            <create>required</create>
                            <update>required</update>
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element minOccurs="0"
                                ref="prop:creation-date">
                                <xs:annotation>
                                    <xs:documentation>
                                        <create>discarded</create>
                                        <update>discarded</update>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0"
                                ref="srel:created-by">
                                <xs:annotation>
                                    <xs:documentation>
                                        <create>discarded</create>
                                        <update>discarded</update>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0"
                                ref="srel:modified-by">
                                <xs:annotation>
                                    <xs:documentation>
                                        <create>discarded</create>
                                        <update>discarded</update>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="prop:name">
                                <xs:annotation>
                                    <xs:documentation>
                                        <create>required</create>
                                        <update>required</update>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="prop:login-name">
                                <xs:annotation>
                                    <xs:documentation>
                                        <create>required</create>
                                        <update>required</update>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element minOccurs="0" ref="prop:active">
                                <xs:annotation>
                                    <xs:documentation>
                                        <create>
                                            discarded (see note 1.)
                                        </create>
                                        <update>
                                            discarded (see note 1.)
                                        </update>
                                        <comment>
                                            1. A created user account is
                                            always active. It is not
                                            possible to activate or
                                            deactivate a user account
                                            using the update method.
                                            This can only be done by
                                            using the activate() and
                                            deactivate() methods.
                                        </comment>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attributeGroup ref="common-types:eSciDocResourceIdentityAttributes"/>
            <xs:attributeGroup ref="common-types:eSciDocRootElementAttributes"/>
        </xs:complexType>
    </xs:element>
</xs:schema>
